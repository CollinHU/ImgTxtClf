testing

['churros', 'hot_and_sour_soup', 'samosa', 'Unnamed: 0', 'sashimi', 'pork_chop', 'spring_rolls', 'panna_cotta', 'beef_tartare', 'greek_salad', 'foie_gras', 'tacos', 'pad_thai', 'poutine', 'ramen', 'pulled_pork_sandwich', 'bibimbap', 'beignets', 'apple_pie', 'crab_cakes', 'risotto', 'paella', 'steak', 'baby_back_ribs', 'miso_soup', 'frozen_yogurt', 'club_sandwich', 'carrot_cake', 'falafel', 'bread_pudding', 'chicken_wings', 'gnocchi', 'caprese_salad', 'creme_brulee', 'escargots', 'chocolate_cake', 'tiramisu', 'spaghetti_bolognese', 'mussels', 'scallops', 'baklava', 'edamame', 'macaroni_and_cheese', 'pancakes', 'garlic_bread', 'beet_salad', 'onion_rings', 'red_velvet_cake', 'grilled_salmon', 'chicken_curry', 'deviled_eggs', 'caesar_salad', 'hummus', 'fish_and_chips', 'lasagna', 'peking_duck', 'guacamole', 'strawberry_shortcake', 'clam_chowder', 'croque_madame', 'french_onion_soup', 'beef_carpaccio', 'fried_rice', 'donuts', 'gyoza', 'ravioli', 'fried_calamari', 'spaghetti_carbonara', 'french_toast', 'lobster_bisque', 'ceviche', 'bruschetta', 'french_fries', 'shrimp_and_grits', 'filet_mignon', 'hamburger', 'dumplings', 'tuna_tartare', 'sushi', 'cheese_plate', 'eggs_benedict', 'cup_cakes', 'takoyaki', 'chocolate_mousse', 'breakfast_burrito', 'hot_dog', 'macarons', 'waffles', 'seaweed_salad', 'cannoli', 'huevos_rancheros', 'pizza', 'chicken_quesadilla', 'pho', 'prime_rib', 'cheesecake', 'ice_cream', 'omelette', 'grilled_cheese_sandwich', 'lobster_roll_sandwich', 'nachos', 'oysters']
[43 94 57]
Traceback (most recent call last):
  File "text_clf_nb.py", line 45, in <module>
    NB_predicted = NB_text_clf.predict(X_test['data'])
  File "/usr/local/lib/python2.7/dist-packages/sklearn/utils/metaestimators.py", line 115, in <lambda>
    out = lambda *args, **kwargs: self.fn(obj, *args, **kwargs)
  File "/usr/local/lib/python2.7/dist-packages/sklearn/pipeline.py", line 306, in predict
    Xt = transform.transform(Xt)
  File "/usr/local/lib/python2.7/dist-packages/sklearn/feature_extraction/text.py", line 923, in transform
    _, X = self._count_vocab(raw_documents, fixed_vocab=True)
  File "/usr/local/lib/python2.7/dist-packages/sklearn/feature_extraction/text.py", line 792, in _count_vocab
    for feature in analyze(doc):
  File "text_clf_nb.py", line 32, in <lambda>
    return lambda doc:([stemmer.stem(w) for w in analyzer(doc)])
  File "/usr/local/lib/python2.7/dist-packages/sklearn/feature_extraction/text.py", line 266, in <lambda>
    tokenize(preprocess(self.decode(doc))), stop_words)
  File "/usr/local/lib/python2.7/dist-packages/sklearn/feature_extraction/text.py", line 119, in decode
    raise ValueError("np.nan is an invalid document, expected byte or "
ValueError: np.nan is an invalid document, expected byte or unicode string.
['churros', 'hot_and_sour_soup', 'samosa', 'sashimi', 'pork_chop', 'spring_rolls', 'panna_cotta', 'beef_tartare', 'greek_salad', 'foie_gras', 'tacos', 'pad_thai', 'poutine', 'ramen', 'pulled_pork_sandwich', 'bibimbap', 'beignets', 'apple_pie', 'crab_cakes', 'risotto', 'paella', 'steak', 'baby_back_ribs', 'miso_soup', 'frozen_yogurt', 'club_sandwich', 'carrot_cake', 'falafel', 'bread_pudding', 'chicken_wings', 'gnocchi', 'caprese_salad', 'creme_brulee', 'escargots', 'chocolate_cake', 'tiramisu', 'spaghetti_bolognese', 'mussels', 'scallops', 'baklava', 'edamame', 'macaroni_and_cheese', 'pancakes', 'garlic_bread', 'beet_salad', 'onion_rings', 'red_velvet_cake', 'grilled_salmon', 'chicken_curry', 'deviled_eggs', 'caesar_salad', 'hummus', 'fish_and_chips', 'lasagna', 'peking_duck', 'guacamole', 'strawberry_shortcake', 'clam_chowder', 'croque_madame', 'french_onion_soup', 'beef_carpaccio', 'fried_rice', 'donuts', 'gyoza', 'ravioli', 'fried_calamari', 'spaghetti_carbonara', 'french_toast', 'lobster_bisque', 'ceviche', 'bruschetta', 'french_fries', 'shrimp_and_grits', 'filet_mignon', 'hamburger', 'dumplings', 'tuna_tartare', 'sushi', 'cheese_plate', 'eggs_benedict', 'cup_cakes', 'takoyaki', 'chocolate_mousse', 'breakfast_burrito', 'hot_dog', 'macarons', 'waffles', 'seaweed_salad', 'cannoli', 'huevos_rancheros', 'pizza', 'chicken_quesadilla', 'pho', 'prime_rib', 'cheesecake', 'ice_cream', 'omelette', 'grilled_cheese_sandwich', 'lobster_roll_sandwich', 'nachos', 'oysters']
[79 35 64]
the accuracy of Naive Bayes is 0.669246590171
